nodeExporter:
  enabled: true

kubeStateMetrics:
  enabled: true

server:
  retention: 10d
  persistentVolume:
    enabled: false

  extraScrapeConfigs:
    - job_name: 'kube-state-metrics'
      metrics_path: '/metrics'
      static_configs:
        - targets:
            - 'kube-state-metrics.monitoring.svc.cluster.local:8080'

    - job_name: 'kubernetes-nodes'
      scheme: http
      kubernetes_sd_configs:
        - role: node
      relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - source_labels: [__address__]
          regex: (.+)
          replacement: ${1}:9100
          target_label: __address__

    - job_name: 'kubernetes-pods'
      kubernetes_sd_configs:
        - role: pod
      relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__

    - job_name: 'kubernetes-service-endpoints'
      kubernetes_sd_configs:
        - role: endpoints
      relabel_configs:
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
          action: replace
          target_label: __scheme__
          regex: (https?)
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__

  alerting:
    alertmanagers:
      - static_configs:
          - targets: ['prometheus-alertmanager.monitoring.svc:9093']

serverFiles:
  alerting_rules.yml:
    groups:
      - name: node.rules
        rules:
          - alert: HighCpuUsage
            expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 70
            for: 1m
            labels:
              severity: warning
            annotations:
              summary: "High CPU usage detected on {{ $labels.instance }}"
              description: "CPU usage is above 70% for more than 1 minute."

          - alert: LowMemoryAvailable
            expr: (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes) * 100 < 20
            for: 1m
            labels:
              severity: warning
            annotations:
              summary: "Low available memory on {{ $labels.instance }}"
              description: "Less than 20% memory available for more than 1 minute."

          - alert: AlwaysFiring
            expr: vector(1)
            for: 0m
            labels:
              severity: critical
            annotations:
              summary: "Test alert firing"
              description: "This alert always fires."

alertmanager:
  configMapOverrideName: alertmanager-config
  persistentVolume:
    enabled: false

